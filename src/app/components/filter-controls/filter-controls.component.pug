.row(
  #t="ngbTooltip",
  [ngbTooltip]="tooltip",
  placement="bottom",
  style="margin-bottom: 40px;",
  triggers="manual")
  .col-sm-12.col-md-12.col-lg-2.col-xl-2.filter-bottom-gap.d-flex.justify-content-center
    .btn-group.custom-dropdown-group(
      ngbDropdown,
      role="group",
      aria-label="Button group with nested dropdown")
      button.btn.btn-outline-primary.btn-intervals.custom-dropdown.margin-middle(
        [disabled]="isTooltipOpen() || isBusy",
        ngbDropdownToggle) {{ timeIntervalLabel }}
      .dropdown-menu(ngbDropdownMenu)
        button.dropdown-item(
          *ngFor="let interval of timeIntervals",
          (click)="changedTimeInterval(interval)") {{ interval.label }}
  .col-12.col-sm-12.col-md-12.col-lg-5.col-xl-5.filter-bottom-gap.d-flex.justify-content-center
    form.form-inline([ngClass]="{'disabled': isBusy}")
      label.label-date.text-center(
        for="dPick1",
        [ngClass]="{'invalid-input': invalidStartDatetime}") Start Date:
      div(style="display:inline-block;")
        .input-group
          button.btn.btn-sm.btn-primary.btn-datepicker(
              (click)="d1.toggle()",
              type="button")
              span.fa.fa-calendar(
                height="auto",
                style="width: 1.2rem; height: 1rem; cursor: pointer;",
                width="auto")
          |
          .input-group-append
            input.form-control.date-text(
              #d1="ngbDatepicker",
              id="dPick1",
              [maxDate]="maxStartDate",
              [minDate]="minStartDate",
              name="dPick1",
              ngbDatepicker,
              [ngClass]="{'invalid-input': invalidStartDatetime}",
              [(ngModel)]="sDate",
              (ngModelChange)="onStartDateChange()",
              placeholder="yyyy-mm-dd")
      div(style="display: inline-block;")
        ngb-timepicker(
          id="tpick1",
          name="tPick1",
          [ngClass]="{'invalid-input': invalidStartDatetime}",
          size="small",
          [(ngModel)]="sTime",
          (ngModelChange)="onStartTimeChange()")
  .col-12.col-sm-12.col-md-12.col-lg-5.col-xl-5.filter-bottom-gap.d-flex.justify-content-center
    form.form-inline([ngClass]="{'disabled': isBusy}")
      label.label-date.extra-padding.text-center(
        for="dPick2",
        [ngClass]="{'invalid-input': invalidEndDatetime}",
        style="") End Date:
      div(style="display:inline-block;")
        .input-group
          button.btn.btn-sm.btn-primary.btn-datepicker(
              (click)="d2.toggle()",
              type="button")
              span.fa.fa-calendar(
                height="auto",
                style="width: 1.2rem; height: 1rem; cursor: pointer;",
                width="auto")
          |
          .input-group-append
            input.form-control.date-text(
              #d2="ngbDatepicker",
              id="dPick2",
              [maxDate]="maxEndDate",
              [minDate]="minEndDate",
              name="dPick2",
              ngbDatepicker,
              [ngClass]="{'invalid-input': invalidEndDatetime}",
              [(ngModel)]="eDate",
              (ngModelChange)="onEndDateChange()",
              placeholder="yyyy-mm-dd")
      div(style="display: inline-block;")
        ngb-timepicker(
          id="tpick2",
          name="tPick2",
          [ngClass]="{'invalid-input': invalidEndDatetime}",
          size="small",
          [(ngModel)]="eTime",
          (ngModelChange)="onEndTimeChange()")
ng-template(#tooltip="")
  ol(style="padding-left: 15px; padding-top: 10px;")
    li.text-left(
      *ngFor="let sentence of warningMessage",
      style="margin-bottom: 5px;") {{ sentence }}
